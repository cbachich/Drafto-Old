/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package fantasydrafter.hmi;

import fantasydrafter.Console;
import fantasydrafter.CustomModel;
import fantasydrafter.CustomTable;
import fantasydrafter.DraftoMachine;

/**
 *
 * @author cbachich
 */
public class DraftDisplay extends javax.swing.JFrame {

  // Static Values
  private static String START  = "Start";
  private static String END    = "End";
  private static String RESUME = "Resume";
  private static String PAUSE  = "Pause";
  
  // Error Text
  private static String BAD_TABLE = 
          "There is bad data in the table. Please correct!";
  
  // Global Values
  private Console console;
  private DraftoMachine drafto;
  private Thread draftoThread;
  
  /**
   * Creates new form DraftDisplay
   */
  public DraftDisplay() {
    initComponents();
    
    // Setup the console
    console = new Console(ConsoleTextArea);
    
    // Setup the JTable
    pickModel = new CustomModel(console);
    pickTable = new CustomTable();
    pickTable.setModel(pickModel);
    PickScrollPane.setViewportView(pickTable);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    ButtonPanel = new javax.swing.JPanel();
    StartButton = new javax.swing.JButton();
    ResumeButton = new javax.swing.JButton();
    PauseButton = new javax.swing.JButton();
    EndButton = new javax.swing.JButton();
    PickPanel = new javax.swing.JPanel();
    PickScrollPane = new javax.swing.JScrollPane();
    ConsolePanel = new javax.swing.JScrollPane();
    ConsoleTextArea = new javax.swing.JTextArea();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    StartButton.setText("Start");
    StartButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        DraftDisplay.this.actionPerformed(evt);
      }
    });

    ResumeButton.setText("Resume");
    ResumeButton.setEnabled(false);
    ResumeButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        DraftDisplay.this.actionPerformed(evt);
      }
    });

    PauseButton.setText("Pause");
    PauseButton.setEnabled(false);
    PauseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        DraftDisplay.this.actionPerformed(evt);
      }
    });

    EndButton.setText("End");
    EndButton.setEnabled(false);
    EndButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        DraftDisplay.this.actionPerformed(evt);
      }
    });

    javax.swing.GroupLayout ButtonPanelLayout = new javax.swing.GroupLayout(ButtonPanel);
    ButtonPanel.setLayout(ButtonPanelLayout);
    ButtonPanelLayout.setHorizontalGroup(
      ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(ButtonPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(StartButton)
        .addGap(18, 18, 18)
        .addComponent(PauseButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(ResumeButton)
        .addGap(18, 18, 18)
        .addComponent(EndButton)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    ButtonPanelLayout.setVerticalGroup(
      ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(ButtonPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(ResumeButton)
          .addComponent(PauseButton)
          .addComponent(StartButton)
          .addComponent(EndButton))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout PickPanelLayout = new javax.swing.GroupLayout(PickPanel);
    PickPanel.setLayout(PickPanelLayout);
    PickPanelLayout.setHorizontalGroup(
      PickPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 598, Short.MAX_VALUE)
      .addGroup(PickPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(PickScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE))
    );
    PickPanelLayout.setVerticalGroup(
      PickPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 267, Short.MAX_VALUE)
      .addGroup(PickPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(PickScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
    );

    ConsoleTextArea.setColumns(20);
    ConsoleTextArea.setRows(5);
    ConsolePanel.setViewportView(ConsoleTextArea);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(ConsolePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
          .addComponent(ButtonPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(PickPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(PickPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(ConsolePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPerformed

    // Get the command string
    String command = evt.getActionCommand();
    // Perform an action based on the button selected
    console.write("Command: " + command);
    
    switch(command) {
      case "Start": 
        StartDrafter();
        break;
      case "Resume":
        ResumeDrafter();
        break;
      case "Pause":
        PauseDrafter();
        break;
      case "End":
        EndDrafter();
        break;
    }
  }//GEN-LAST:event_actionPerformed

  // Start the drafter
  private void StartDrafter() {
    // Check that the table contains good values. If not, inform the user and do
    // not continue
    if(!pickModel.isTableGood()) {
      console.write(BAD_TABLE);
      return;
    }
    
    // Toggle the buttons
    ToggleButtons(START);
    
    // Lock the fields
    pickModel.lockCells();
    
    // Start Drafto
    drafto = new DraftoMachine(console);
    draftoThread = new Thread(drafto);
    draftoThread.start();
    
  }
  
  // Pause the drafter
  private void PauseDrafter() {
    // Toggle the buttons
    ToggleButtons(PAUSE);
    
    // Pause Drafto
    drafto.pause();
  }
  
  // Resume the drafter
  private void ResumeDrafter() {
    // Toggle the buttons
    ToggleButtons(RESUME);
    
    // Resume Drafto
    drafto.resume();
  }
  
  // Ends the drafter
  private void EndDrafter() {
    // Toggle the buttons
    ToggleButtons(END);
    
    // Unlock the fields
    pickModel.unlockCells();
  }
  
  // Toggle the buttons
  private void ToggleButtons(String cmd) {
    if (cmd.matches(START) || cmd.matches(RESUME)) {
      StartButton.setEnabled(false);
      ResumeButton.setEnabled(false);
      PauseButton.setEnabled(true);
      EndButton.setEnabled(false);
    } else if (cmd.matches(PAUSE)) {
      StartButton.setEnabled(false);
      ResumeButton.setEnabled(true);
      PauseButton.setEnabled(false);
      EndButton.setEnabled(true);
    } else if (cmd.matches(END)) {
      StartButton.setEnabled(true);
      ResumeButton.setEnabled(false);
      PauseButton.setEnabled(false);
      EndButton.setEnabled(false);     
    }
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DraftDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DraftDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DraftDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DraftDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        new DraftDisplay().setVisible(true);
      }
    });
  }
  
  // Variables decleration - can modify
  private CustomModel pickModel;
  private CustomTable pickTable;
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel ButtonPanel;
  private javax.swing.JScrollPane ConsolePanel;
  private javax.swing.JTextArea ConsoleTextArea;
  private javax.swing.JButton EndButton;
  private javax.swing.JButton PauseButton;
  private javax.swing.JPanel PickPanel;
  private javax.swing.JScrollPane PickScrollPane;
  private javax.swing.JButton ResumeButton;
  private javax.swing.JButton StartButton;
  // End of variables declaration//GEN-END:variables
}
